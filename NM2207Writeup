<!doctype html>
<html>
<head>
<meta charset="UTF-8">
<title>NM2207 Final Project Write Up</title>
<style type="text/css">
.container {
	width:900px;
	margin: 0 auto;
}
</style>
</head>

<body>
<div class="container" style="font-family: Cambria, 'Hoefler Text', 'Liberation Serif', Times, 'Times New Roman', serif; text-align: left;">
  <p align="center"><strong>NM2207 FINAL PROJECT WRITE UP</strong><br>
    Yeo Qiao Yin A0112662N</p>
  <p>The game I designed is a single-player game in which the player uses the arrow keys to move the main character, Mario to eat as many mushrooms as possible while avoiding the obstacles, Goomba. This game is adapted from this website (<a href="http://www.lostdecadegames.com/how-to-make-a-simple-html5-canvas-game/">http://www.lostdecadegames.com/how-to-make-a-simple-html5-canvas-game/</a>).&nbsp;</p>
  <p>I selected this game because I could apply quite a number of Javascript codes taught in class, such as setInterval, Math.random, if-else statements and while loop function. Moreover, the game code provided by the website is a &nbsp;HTML5 code, and I wanted to challenge myself to change and combine the code provided with the clicking game code I submitted for assignment 3.&nbsp;</p>
  <p>There are three main game objects: Mario, Mushroom and Goomba. Similar to the clicking game, there are three levels of difficulty that user can select after clicking the &lsquo;Begin&rsquo; button. The changes in difficulty are reflected by the speed of Mario and the number of obstacles. The higher the level, the more obstacles there are and the faster the Mario&rsquo;s speed, which requires more control by the user to prevent themselves from colliding into Goomba obstacles. </p>
  <p>The mapping function taught in class, Math.floor and Math.random functions are used to randomize the position of the mushroom and Goomba obstacles. There is a check collision function to check for collision between (1) Mario and Goomba, (2) Mario and mushroom and (3) mushroom and Goomba. This check collision code is adapted from the website, and changed into a generic check collision code so that it can be applied across the three different scenarios mentioned above as the size of all the game objects are similar. If the four conditions concerning the x- and y-position of the game objects are fulfilled, collision is true, and the scores will be updated accordingly. The check collision function is also used to ensure that the mushroom and goomba obstacles do not overlap when they are created. </p>
  <p>An array is used to hold the obstacles and while loop function is used to create and randomize position of goomba obstacles. If-else statements are frequently used to execute different commands in different situations. For example, if game mode is not selected, an alert box will pop up. As the game requires player to use the arrow keys to move Mario, there are event listeners to listen for key up and key down events as well as the particular key that is being pressed. (down = 40, left = 37, right = 39, up = 38). There is a update function that is executed very rapidly to update the position of Mario (i.e. move Mario) and it comprises of four if-statements, one for each arrow key. When each arrow key is pressed, xpos and ypos of Mario will be updated according to the xrate and yrate. Moreover, by using four if-statements, users are about to move Mario diagonally by pressing two keys simultaneously. Also, the setInterval function is being used to execute the update function and countdown timer, while the setTimeout function is used to execute the endGame function when 20 seconds is up. </p>
  <p>Music is added to enhance the playing experience and provide feedback for each click and collision. I got the sound from freesound.org as well as from Youtube.&nbsp;The layout is also designed to mimic the retro Super Mario game using the attr({&lsquo;fill&rsquo;: url()}) code and amending the CSS stylesheet (e.g. changing the font-family to Retro Computer). I downloaded images from Google Images and edited them on Photoshop. The buttons were also created from scratched using Photoshop. </p>
  <p>I really enjoyed making this game although it was extremely time-consuming due to the conversion from HTML5 code to Javascript code, and figuring out the main game loop and functions such as modifier. Nonetheless, it was a fulfilling experience, as I deepened my understanding and honed my coding skills. Moreover, I was able to somewhat relive my childhood through the creation of this childhood game. </p>
</div>
</body>
</html>
